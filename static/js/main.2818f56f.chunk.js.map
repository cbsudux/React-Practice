{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","maxWidth","media","height","MediaCard","classes","Card","className","CardActionArea","CardMedia","image","title","CardContent","Typography","gutterBottom","variant","component","color","App","Container","Grid","container","direction","justifyContent","alignItems","item","spacing","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2LAAe,I,4ECgBTA,EAAYC,YAAW,CAC3BC,KAAM,CACJC,SAAU,KAEZC,MAAO,CACLC,OAAQ,OAIZ,SAASC,IACP,IAAMC,EAAUP,IAEhB,OACE,cAACQ,EAAA,EAAD,CAAMC,UAAWF,EAAQL,KAAzB,SACE,eAACQ,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEF,UAAWF,EAAQH,MACnBQ,MAAM,iDACNC,MAAM,0BAER,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,KAAhD,oBAGA,cAACH,EAAA,EAAD,CAAYE,QAAQ,QAAQE,MAAM,gBAAgBD,UAAU,IAA5D,mJAiDKE,MAtCf,WACE,OACE,cAACC,EAAA,EAAD,CAAWlB,SAAS,KAApB,SACE,eAACmB,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,eAAe,SAASC,WAAW,SAAtE,UACE,cAACJ,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,cAACZ,EAAA,EAAD,CAAYE,QAAQ,KAAKD,cAAY,EAArC,8BAUF,cAACM,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAACL,EAAA,EAAD,CAAMC,WAAS,EAACK,QAAS,EAAGH,eAAe,SAASC,WAAW,SAA/D,UACE,cAACJ,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,cAACrB,EAAD,MAEF,cAACgB,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,cAACrB,EAAD,MAEF,cAACgB,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,cAACrB,EAAD,MAEF,cAACgB,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,cAACrB,EAAD,iBClECuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2818f56f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 140,\n  },\n});\n\nfunction MediaCard() {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <CardActionArea>\n        <CardMedia\n          className={classes.media}\n          image=\"/static/images/cards/contemplative-reptile.jpg\"\n          title=\"Contemplative Reptile\"\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            Lizard\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging\n            across all continents except Antarctica\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n}\n\n\nfunction App() {\n  return (\n    <Container maxWidth=\"md\">\n      <Grid container direction='column' justifyContent='center' alignItems='center'>\n        <Grid item>\n          <Typography variant=\"h2\" gutterBottom>\n            React Practice\n          </Typography>\n        </Grid>\n\n        {/* Card can be generated using .map() \n            For that you need to store the projects an arry or object that can be iterated on\n            should have project title and desc and img\n            How to make it link to the project page? -> breakdown sesh\n        */}\n        <Grid item>\n          <Grid container spacing={4} justifyContent='center' alignItems='center'>\n            <Grid item>\n              <MediaCard />\n            </Grid>\n            <Grid item>\n              <MediaCard />\n            </Grid>\n            <Grid item>\n              <MediaCard />\n            </Grid>\n            <Grid item>\n              <MediaCard />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n\n    </Container>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}